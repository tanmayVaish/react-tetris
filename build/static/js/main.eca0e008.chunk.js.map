{"version":3,"sources":["gameHelpers.js","images/bg.gif","components/styles/StyledTetris.js","hooks/useStage.js","tetrominos.js","components/styles/StyledCell.js","components/Cell.js","components/styles/StyledStage.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","TETROMINOS","shape","color","I","J","L","O","S","T","Z","randomTetrominos","tetrominos","randTetromino","Math","floor","random","StyledCell","props","type","Cell","React","memo","StyledStage","height","width","Stage","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","className","Tetris","toggle","document","querySelector","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","console","log","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","innerHTML","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eca0e008.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n    Array.from(Array(STAGE_HEIGHT), () =>\n        Array(STAGE_WIDTH).fill([0, 'clear'])\n    );\n\nexport const checkCollision = (player, stage, {x: moveX, y: moveY}) => {\n\n    for (let y = 0; y < player.tetromino.length; y += 1) {\n        for (let x = 0; x < player.tetromino[0].length; x += 1) {\n\n            if (player.tetromino[y][x] !== 0) {\n                if (\n                    !stage[y + player.pos.y + moveY] ||\n\n                    !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n\n                    stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear'\n                ) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n};","export default __webpack_public_path__ + \"static/media/bg.0d016f96.gif\";","import styled from \"styled-components\";\nimport bgImage from '../../images/bg.gif';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n`\n\nexport const StyledTetris = styled.div`\n  \n  display: flex;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 50vw;\n  align-items: center;\n  justify-content: space-between;\n  \n  \n  aside{\n    width: 100%;\n    max-width: 18vw;\n    display: block;\n    padding: 0 20px;\n  }\n  `","import {useState, useEffect} from \"react\";\n\nimport {createStage} from \"../gameHelpers\";\n\nexport const useStage = (player, resetPlayer) => {\n    const [stage, setStage] = useState(createStage());\n    const [rowsCleared, setRowsCleared] = useState(0);\n\n\n    useEffect(() => {\n\n        setRowsCleared(0);\n\n        const sweepRows = newStage =>\n            newStage.reduce((ack, row) => {\n            if(row.findIndex(cell => cell[0] === 0) === -1){\n                setRowsCleared(prev => prev+1);\n                ack.unshift(new Array(newStage[0].length).fill([0,'clear']));\n                return ack;\n            }\n            ack.push(row);\n            return ack;\n        },[]);\n\n\n        const updateStage = prevStage => {\n\n            const newStage = prevStage.map(row =>\n                row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\n            );\n\n            player.tetromino.forEach((row,y) => {\n                row.forEach((value,x) => {\n                    if(value !== 0){\n                        newStage[y + player.pos.y][x + player.pos.x] = [value, `${player.collided ? 'merged' : 'clear'}`];\n                    }\n                });\n            });\n\n            if(player.collided){\n                resetPlayer();\n                return sweepRows(newStage);\n            }\n\n            return newStage;\n        };\n\n        setStage(prev => updateStage(prev));\n\n    }, [player,player.collided, player.pos.x, player.pos.y, player.tetromino, resetPlayer]);\n\n    return [stage, setStage, rowsCleared];\n};","export const TETROMINOS = {\n    0: { shape: [[0]], color: '0, 0, 0' },\n    I: {\n        shape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]],\n        color: '80, 227, 230',\n    },\n    J: {\n        shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]],\n        color: '36, 95, 223',\n    },\n    L: {\n        shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n        color: '223, 173, 36',\n    },\n    O: {\n        shape: [['O', 'O'], ['O', 'O']],\n        color: '223, 217, 36',\n    },\n    S: {\n        shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]],\n        color: '48, 211, 56',\n    },\n    T: {\n        shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n        color: '132, 61, 198',\n    },\n    Z: {\n        shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]],\n        color: '227, 78, 78',\n    },\n};\n\nexport const randomTetrominos = () => {\n    const tetrominos = 'IJLOSTZ';\n    const randTetromino =\n        tetrominos[Math.floor(Math.random() * tetrominos.length)];\n    return TETROMINOS[randTetromino];\n};","import styled from \"styled-components\";\n\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-top-color: rgba(255,255,255,0.8);\n  border-right-color: rgba(255,255,255,0.8);\n  border-bottom-color: rgba(0,0,0,0.6);\n  border-left-color: rgba(0,0,0,0.6);\n  \n    `\n","import React from \"react\";\nimport {StyledCell} from \"./styles/StyledCell\";\nimport {TETROMINOS} from \"../tetrominos\";\n\nconst Cell = ({type}) => (\n    <StyledCell type={type} color={TETROMINOS[type].color}/>\n)\n\nexport default React.memo(Cell);","import styled from \"styled-components\";\n\nexport const StyledStage = styled.div`\n    \n    display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw/ ${props => props.width})\n  );\n  grid-template-columns: repeat(\n    ${props => props.width}, 1fr);\n  \n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: rgba(50,50,50,0.3);\n  );\n  \n    `","import React from \"react\";\nimport Cell from \"./Cell\";\n\nimport {StyledStage} from \"./styles/StyledStage\";\n\nconst Stage = ({stage}) => (\n    <StyledStage width={stage[0].length} height={stage.length}>\n        {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n    </StyledStage>\n);\n\nexport default Stage;","import styled from \"styled-components\";\n\nexport const StyledDisplay = styled.div`\n    \n    display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px;\n  min-height: 30px;\n  width:18vw;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : 'black')};\n  background: greenyellow;\n  box-shadow: white 0vh 0vh 1vh 0.1vh;\n  font-family: Pixel,Arial, Helvetica, sans-serif;\n  font-size: 1.8vh;\n  \n    `","import React from \"react\";\n\nimport {StyledDisplay} from \"./styles/StyledDisplay\";\n\nconst Display = ({gameOver, text}) => (\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display;","import styled from \"styled-components\";\n\nexport const StyledStartButton = styled.button`\n    \n  cursor: pointer;\n  padding: 20px;\n  min-height: 30px;\n  width: 18vw;\n  border-radius: 5px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel,Arial, Helvetica, sans-serif;\n  font-size: 1.8vh;\n  outline: none;\n  box-shadow: white 2px 0 10px 3px;\n  margin-top: 10vh;\n`","import React from \"react\";\n\nimport {StyledStartButton} from \"./styles/StyledStartButton\";\n\nconst StartButton = ({callback}) => (\n    <StyledStartButton onClick={callback} className='toggle'>Start Game</StyledStartButton>\n)\n\nexport default StartButton;","import React, {useState, useCallback} from \"react\";\n\nimport {createStage, checkCollision} from \"../gameHelpers\";\nimport {StyledTetris, StyledTetrisWrapper} from \"./styles/StyledTetris\";\n\nimport {useGameStatus} from \"../hooks/useGameStatus\";\nimport {useInterval} from \"../hooks/useInterval\";\nimport {useStage} from \"../hooks/useStage\";\nimport {usePlayer} from \"../hooks/usePlayer\";\n\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport StartButton from \"./StartButton\";\n\nconst Tetris = () => {\n\n    let toggle = document.querySelector('.toggle');\n\n\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n\n    console.log('re-render');\n\n    const movePlayer = dir => {\n        if (!checkCollision(player, stage, {x: dir, y: 0})) {\n            updatePlayerPos({x: dir, y: 0});\n        }\n    }\n\n    const startGame = () => {\n        setStage(createStage());\n        setDropTime(1000);\n        setGameOver(false);\n        setScore(0);\n        setLevel(0);\n        setRows(0);\n        resetPlayer();\n        toggle.innerHTML = 'RESET GAME';\n    }\n\n    const drop = () => {\n\n        if(rows > (level+1)*10){\n            setLevel(prev => prev + 1);\n            setDropTime(1000/(level+1) + 200);\n        }\n\n        if (!checkCollision(player, stage, {x: 0, y: 1})) {\n            updatePlayerPos({x: 0, y: 1, collided: false})\n        } else {\n            if (player.pos.y < 1) {\n                console.log(\"game over\");\n                setGameOver(true);\n                setDropTime(null);\n            }\n            updatePlayerPos({x: 0, y: 0, collided: true});\n        }\n\n    };\n\n    const dropPlayer = () => {\n        drop();\n    }\n\n    const move = ({keyCode}) => {\n\n        if (!gameOver) {\n            if (keyCode === 37) {\n                movePlayer(-1);\n            } else if (keyCode === 39) {\n                movePlayer(1);\n            } else if (keyCode === 40) {\n                dropPlayer();\n            } else if (keyCode === 38) {\n                playerRotate(stage, 1);\n            }\n        }\n    }\n\n    useInterval(() => {\n        drop();\n    }, dropTime)\n\n    return (\n        <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)}>\n            <StyledTetris>\n                <Stage stage={stage}/>\n                <aside>\n\n                    {gameOver ? (<Display gameOver={gameOver} text=\"Game Over\"/>)\n                        : (\n                            <div>\n                                <Display text={`Score: ${score}`}/>\n                                <Display text={`Rows: ${rows}`}/>\n                                <Display text={`Level: ${level}`}/>\n                            </div>\n                        )}\n                    <StartButton callback={startGame}/>\n                </aside>\n            </StyledTetris>\n        </StyledTetrisWrapper>\n    );\n};\n\nexport default Tetris;","import {useCallback, useState} from \"react\";\n\nimport {TETROMINOS, randomTetrominos} from \"../tetrominos\";\nimport {checkCollision, STAGE_WIDTH} from \"../gameHelpers\";\n\nexport const usePlayer = () => {\n    const [player, setPlayer] = useState({\n        pos: {x: 0, y: 0},\n        tetromino: TETROMINOS[0].shape,\n        collided: false\n    });\n\n    const rotate = (matrix, dir) => {\n\n        const rotatedTetro = matrix.map((_, index) =>\n            matrix.map(col => col[index])\n        );\n        if (dir > 0) {\n            return rotatedTetro.map(row => row.reverse());\n        }\n        return rotatedTetro.reverse();\n    };\n\n    const playerRotate = (stage, dir) => {\n\n        const clonedPlayer = JSON.parse(JSON.stringify(player));\n        clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n\n        const pos = clonedPlayer.pos.x;\n        let offset = 1;\n        while (checkCollision(clonedPlayer, stage, {x:0 , y:0})){\n            clonedPlayer.pos.x +=offset;\n            offset = -(offset + (offset > 0 ? 1:-1));\n            if(offset>clonedPlayer.tetromino[0].length){\n                rotate(clonedPlayer.tetromino, -dir);\n                clonedPlayer.pos.x = pos;\n                return;\n            }\n        }\n\n\n        setPlayer(clonedPlayer);\n    }\n\n    const updatePlayerPos = ({x, y, collided}) => {\n        setPlayer(prev => ({\n            ...prev,\n            pos: {x: (prev.pos.x += x), y: (prev.pos.y += y)},\n            collided,\n        }));\n    };\n\n    const resetPlayer = useCallback(() => {\n        setPlayer({\n            pos: {x: STAGE_WIDTH / 2 - 2, y: 0},\n            tetromino: randomTetrominos().shape,\n            collided: false,\n        });\n    }, [])\n\n\n    return [player, updatePlayerPos, resetPlayer, playerRotate];\n}","import {useState, useEffect, useCallback} from \"react\";\n\nexport const useGameStatus = rowsCleared => {\n    const [score, setScore] = useState(0);\n    const [rows, setRows] = useState(0);\n    const [level, setLevel] = useState(0);\n\n    const linePoints = [40, 100, 300, 1200];\n\n    const calcScore = useCallback(() => {\n        if(rowsCleared > 0){\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n            setRows(prev => prev + rowsCleared);\n        }\n    }, [level, linePoints, rowsCleared]);\n\n    useEffect(() => {\n        calcScore();\n    }, [calcScore,rowsCleared,score]);\n\n    return [score, setScore, rows, setRows, level, setLevel];\n}","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}","import React from \"react\";\nimport Tetris from './components/Tetris'\n\nconst App = () => (\n  <div className='App'>\n    <Tetris />\n  </div>\n)\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}