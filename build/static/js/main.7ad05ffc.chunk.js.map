{"version":3,"sources":["images/bg.png","components/styles/StyledTetris.js","components/styles/StyledCell.js","tetrominos.js","components/Cell.js","components/styles/StyledStage.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","gameHelpers.js","App.js","reportWebVitals.js","index.js"],"names":["StyledTetrisWrapper","styled","div","bgImage","StyledTetris","StyledCell","props","color","type","TETROMINOS","shape","I","J","L","O","S","T","Z","Cell","StyledStage","height","width","Stage","stage","length","map","row","cell","x","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","Tetris","Array","from","fill","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ad05ffc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.d63cfd51.png\";","import styled from \"styled-components\";\nimport bgImage from '../../images/bg.png';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n\n`\n\nexport const StyledTetris = styled.div`\n  \n  display: flex;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n  \n  aside{\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n  `","import styled from \"styled-components\";\n\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-top-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-bottom-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n    `\n","export const TETROMINOS = {\n    0:{shape:[[0]], color: '0,0,0'},\n    I:{\n        shape:[\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0]\n        ],\n        color: '80, 227, 230',\n    },\n    J:{\n        shape:[\n            [0, 'J', 0],\n            [0, 'J', 0],\n            [0, 'J', 0],\n            ['J', 'J', 0]\n        ],\n        color: '36, 95, 223',\n    },\n    L:{\n        shape:[\n            [0, 'L', 0],\n            [0, 'L', 0],\n            [0, 'L', 0],\n            [0, 'L', 'L']\n        ],\n        color: '233, 173, 36',\n    },\n    O:{\n        shape:[\n            ['O', 'O'],\n            ['O', 'O']\n        ],\n        color: '223, 217, 36',\n    },\n    S:{\n        shape:[\n            [0, 'S', 'S'],\n            ['S', 'S', 0],\n            [0, 0, 0],\n        ],\n        color: '48, 211, 56',\n    },\n    T:{\n        shape:[\n            [0, 0, 0],\n            ['T', 'T', 'T'],\n            [0, 'T', 0]\n        ],\n        color: '132, 61, 198',\n    },\n    Z:{\n        shape:[\n            ['Z', 'Z', 0],\n            [0, 'Z', 'Z'],\n            [0, 0, 0]\n        ],\n        color: '227, 78, 78',\n    }\n}\n\nexport const randomTetrominos = () => {\n    const tetrominos = 'IJLOSTZ';\n    const randTetromino =\n        tetrominos[Math.floor(Math.random() * tetrominos.length)];\n    return TETROMINOS[randTetromino];\n}","import React from \"react\";\nimport {StyledCell} from \"./styles/StyledCell\";\nimport {TETROMINOS} from \"../tetrominos\";\n\nconst Cell = ({type}) => (\n    <StyledCell type={type} color={TETROMINOS[type].color} />\n)\n\nexport default Cell;","import styled from \"styled-components\";\n\nexport const StyledStage = styled.div`\n    \n    display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw/ ${props => props.width})\n  );\n  grid-template-columns: repeat(\n    ${props => props.width}, 1fr);\n  \n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n  );\n  \n    `","import React from \"react\";\nimport Cell from \"./Cell\";\n\nimport {StyledStage} from \"./styles/StyledStage\";\n\nconst Stage = ({stage}) => (\n    <StyledStage width={stage[0].length} height={stage.length}>\n        {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]}/>))}\n    </StyledStage>\n)\n\nexport default Stage;","import styled from \"styled-components\";\n\nexport const StyledDisplay = styled.div`\n    \n    display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel,Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n    `","import React from \"react\";\n\nimport {StyledDisplay} from \"./styles/StyledDisplay\";\n\nconst Display = ({gameOver, text}) => (\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display","import styled from \"styled-components\";\n\nexport const StyledStartButton = styled.button`\n    \n  cursor: pointer;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel,Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n`","import React from \"react\";\n\nimport {StyledStartButton} from \"./styles/StyledStartButton\";\n\nconst StartButton = ({callback}) => (\n    <StyledStartButton>Start Game</StyledStartButton>\n)\n\nexport default StartButton;","import React from \"react\";\n\nimport {createStage} from \"../gameHelpers\";\nimport {StyledTetris, StyledTetrisWrapper} from \"./styles/StyledTetris\";\n\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport StartButton from \"./StartButton\";\n\nconst Tetris = () => {\n    return (\n        <StyledTetrisWrapper>\n            <StyledTetris>\n                <div>\n                    <Stage stage={createStage()}/>\n                    <aside>\n                        <Display text='Score'/>\n                        <Display text='Rows'/>\n                        <Display text='Level'/>\n                        <StartButton/>\n                    </aside>\n                </div>\n            </StyledTetris>\n        </StyledTetrisWrapper>\n    )\n}\n\nexport default Tetris;","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n    Array.from(Array(STAGE_HEIGHT), ()=>\n    new Array(STAGE_WIDTH).fill([0, 'clear'])\n    )","import React from \"react\";\nimport Tetris from './components/Tetris'\n\nconst App = () => (\n  <div className='App'>\n    <Tetris />\n  </div>\n)\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}